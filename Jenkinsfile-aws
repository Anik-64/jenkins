pipeline {
    agent any

    environment {
        DOCKER_TAG = ${BUILD_NUMBER}
        DOCKER_IMAGE = "beekeeper27/ipcidrcalculator"
        EC2_HOST = "your-ec2-public-ip"  // Replace with your EC2 public IP
        APP_PORT = "3000"  // Replace with your app's port
    }

    stages {
        stage('Build') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub', passwordVariable: 'password', usernameVariable: 'username')]) {
                    sh 'docker build -t ${username}/ipcidrcalculator:1 .'
                    sh "docker tag ${username}/ipcidrcalculator:1 ${username}/ipcidrcalculator:${DOCKER_TAG}"
                }
            }
        }

        stage('Push') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub', passwordVariable: 'password', usernameVariable: 'username')]) {
                    sh 'echo ${password} | docker login -u ${username} --password-stdin'
                    sh "docker push ${username}/ipcidrcalculator:${DOCKER_TAG}"
                }
            }
        }

        stage('Deploy to EC2') {
            steps {
                sshagent(credentials: ['ec2-ssh-key']) {
                    sh """
                        ssh -o StrictHostKeyChecking=no ec2-user@${EC2_HOST} '
                            docker pull ${DOCKER_IMAGE}:${DOCKER_TAG} &&
                            docker stop ipcidrcalculator || true &&
                            docker rm ipcidrcalculator || true &&
                            docker run -d --name ipcidrcalculator -p 80:${APP_PORT} ${DOCKER_IMAGE}:${DOCKER_TAG}
                        '
                    """
                }
            }
        }

        stage('Logout') {
            steps {
                sh 'docker logout'
            }
        }

        stage('Finish') {
            steps {
                echo 'Successfully built and deployed!'
            }
        }
    }
}